{"version":3,"sources":["components/Charts.jsx","components/CaseChart.jsx","components/CaseData.jsx","components/Today.jsx","components/CountryData.jsx","components/SelectBox.jsx","components/CovidData.jsx","App.js","serviceWorker.js","index.js"],"names":["Charts","chartRef","React","createRef","myChart","this","createChart","props","chartData","undefined","length","dates","confirmed","recovered","deaths","active","forEach","element","push","date","sum","padding","isMobile","myChartRef","current","getContext","isEmpty","Chart","type","data","labels","datasets","label","borderColor","fill","borderWidth","pointRadius","options","animation","duration","easing","elements","line","layout","left","right","top","bottom","legend","boxWidth","title","display","scales","xAxes","text","ticks","maxTicksLimit","maxRotation","yAxes","selectedCountry","update","style","justifyContent","width","marginBottom","id","ref","Component","CaseChart","dailyArr","index","splice","tooltips","enabled","mode","gridLines","CaseData","changeInNumberFromPrevDay","sign","Col","md","sm","xs","className","class","Math","abs","color","Today","Row","CountryData","stats","Container","fluid","fontSize","fontWeight","SelectBox","span","offset","Form","Group","Control","as","custom","onChange","onChangeFunction","value","selectedValue","defaultValue","countryArr","map","country","key","CovidData","state","worldStats","selectedCounty","getData","bind","backToGlobalNumbers","fetch","then","response","json","Object","keys","i","countryData","worldChart","dailyData","setState","event","target","countryStats","lastUpdated","backgroundColor","textAlign","Button","onClick","marginTop","href","textDecoration","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9c936096.chunk.js","sourcesContent":["import React from \"react\";\nimport Chart from \"chart.js\";\nimport { isEmpty } from \"lodash\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default class Charts extends React.Component {\n\tchartRef = React.createRef();\n\tconstructor() {\n\t\tsuper();\n\t\tthis.myChart = {};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.createChart(this.props);\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.createChart(this.props);\n\t}\n\n\tcreateChart(props) {\n\t\tif (props.chartData && props.chartData.length !== undefined) {\n\t\t\tvar dates = [];\n\t\t\tvar confirmed = [];\n\t\t\tvar recovered = [];\n\t\t\tvar deaths = [];\n\t\t\tvar active = [];\n\t\t\tprops.chartData.forEach((element) => {\n\t\t\t\tdates.push(element.date);\n\t\t\t\tconfirmed.push(element.confirmed);\n\t\t\t\trecovered.push(element.recovered);\n\t\t\t\tdeaths.push(element.deaths);\n\t\t\t\tvar sum = 0;\n\t\t\t\tactive.push(\n\t\t\t\t\t(sum += element.confirmed - element.recovered - element.deaths)\n\t\t\t\t);\n\t\t\t});\n\t\t\tlet pointRadius = 3;\n\t\t\tlet padding = 50;\n\t\t\tif (isMobile) {\n\t\t\t\tpointRadius = 1;\n\t\t\t\tpadding = 5;\n\t\t\t}\n\n\t\t\tconst myChartRef = this.chartRef.current.getContext(\"2d\");\n\t\t\tif (!isEmpty(this.myChart)) {\n\t\t\t\tthis.myChart.data.datasets[0].data = confirmed;\n\t\t\t\tthis.myChart.data.datasets[1].data = recovered;\n\t\t\t\tthis.myChart.data.datasets[2].data = deaths;\n\t\t\t\tthis.myChart.data.datasets[3].data = active;\n\t\t\t\tthis.myChart.options.title.text = props.selectedCountry;\n\t\t\t\tthis.myChart.update();\n\t\t\t} else {\n\t\t\t\t/*  if(isMobile){\n                Chart.defaults.global.elements.point.borderWidth =0;\n            } */\n\t\t\t\tthis.myChart = new Chart(myChartRef, {\n\t\t\t\t\ttype: \"line\",\n\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tlabels: dates,\n\t\t\t\t\t\tdatasets: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"Confirmed\",\n\t\t\t\t\t\t\t\tdata: confirmed,\n\t\t\t\t\t\t\t\tborderColor: \"#0e50dd\",\n\t\t\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\t\t\tpointRadius: 1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"Recovered\",\n\t\t\t\t\t\t\t\tdata: recovered,\n\t\t\t\t\t\t\t\tborderColor: \"green\",\n\t\t\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\t\t\tpointRadius: 1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"Deaths\",\n\t\t\t\t\t\t\t\tdata: deaths,\n\t\t\t\t\t\t\t\tborderColor: \"red\",\n\t\t\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\t\t\tpointRadius: 1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"Active\",\n\t\t\t\t\t\t\t\tdata: active,\n\t\t\t\t\t\t\t\tborderColor: \"#ffb701\",\n\t\t\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\t\t\tpointRadius: 1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tanimation: {\n\t\t\t\t\t\t\tduration: 1500,\n\t\t\t\t\t\t\teasing: \"easeInOutQuint\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\telements: {\n\t\t\t\t\t\t\tline: {},\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\tpadding: {\n\t\t\t\t\t\t\t\tleft: padding,\n\t\t\t\t\t\t\t\tright: padding,\n\t\t\t\t\t\t\t\ttop: padding,\n\t\t\t\t\t\t\t\tbottom: 10,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlegend: {\n\t\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\t\tboxWidth: isMobile ? 10 : 40,\n\t\t\t\t\t\t\t\tpadding: 10,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tscales: {\n\t\t\t\t\t\t\txAxes: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\t\t\ttext: \"Value\",\n\t\t\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\t\t\tmaxTicksLimit: isMobile ? 4 : 10,\n\t\t\t\t\t\t\t\t\t\tmaxRotation: 0,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tyAxes: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\t\t\ttext: \"Value\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={{ display: \"flex\", justifyContent: \"center\" }}>\n\t\t\t\t<div style={{ width: \"50%\", padding: \"1rem\", marginBottom: \"3rem\" }}>\n\t\t\t\t\t<canvas id=\"myChart\" ref={this.chartRef} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from \"react\";\nimport Chart from \"chart.js\";\nimport { isEmpty } from \"lodash\";\n\nexport default class CaseChart extends React.Component {\n\tchartRef = React.createRef();\n\tconstructor() {\n\t\tsuper();\n\t\tthis.myChart = {};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.createChart(this.props);\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.createChart(this.props);\n\t}\n\n\tcreateChart(props) {\n\t\tif (props.chartData && props.chartData.length !== undefined) {\n\t\t\tlet dailyArr = [];\n\t\t\tprops.chartData.forEach((element, index) => {\n\t\t\t\tdailyArr.push(element - props.chartData[index - 1]);\n\t\t\t});\n\n\t\t\tconst myChartRef = this.chartRef.current.getContext(\"2d\");\n\t\t\tif (!isEmpty(this.myChart)) {\n\t\t\t\tthis.myChart.data.datasets[0].data = dailyArr.splice(-20);\n\n\t\t\t\tthis.myChart.update();\n\t\t\t} else {\n\t\t\t\tthis.myChart = new Chart(myChartRef, {\n\t\t\t\t\ttype: \"line\",\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tlabels: props.dates.splice(-20),\n\t\t\t\t\t\tdatasets: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"Confirmed\",\n\t\t\t\t\t\t\t\tdata: dailyArr.splice(-20),\n\t\t\t\t\t\t\t\tborderColor: \"#011627\",\n\t\t\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\t\t\tpointRadius: 0,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tanimation: {\n\t\t\t\t\t\t\tduration: 2000,\n\t\t\t\t\t\t\teasing: \"easeInOutQuint\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttooltips: {\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\tmode: \"nearest\",\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tlegend: {\n\t\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tscales: {\n\t\t\t\t\t\t\txAxes: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tgridLines: {\n\t\t\t\t\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tyAxes: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tgridLines: {\n\t\t\t\t\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<canvas id=\"myChart\" ref={this.chartRef} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport CaseChart from \"./CaseChart\";\nfunction CaseData(props) {\n\tvar changeInNumberFromPrevDay =\n\t\tprops.data[props.data.length - 1] - props.data[props.data.length - 2];\n\tvar sign =\n\t\tchangeInNumberFromPrevDay > 0\n\t\t\t? \"+\"\n\t\t\t: changeInNumberFromPrevDay < 0\n\t\t\t? \"-\"\n\t\t\t: \"\";\n\treturn (\n\t\t<Col md={2} sm={4} xs={4} className={props.class}>\n\t\t\t<div style={{}}>\n\t\t\t\t{props.data[props.data.length - 1]}\n\t\t\t\t<br />\n\t\t\t\t{props.title}\n\t\t\t\t<div>\n\t\t\t\t\t[{sign}\n\t\t\t\t\t{Math.abs(changeInNumberFromPrevDay)}]\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<CaseChart chartData={props.data} dates={props.dates} color=\"#005C25\" />\n\t\t</Col>\n\t);\n}\n\nexport default CaseData;\n","import React from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport CaseData from \"./CaseData\";\n\nfunction Today(props) {\n\tif (props.data && props.data.length !== undefined) {\n\t\tlet confirmed = [],\n\t\t\tdeaths = [],\n\t\t\trecovered = [],\n\t\t\tactive = [],\n\t\t\tdates = [];\n\t\tprops.data.forEach((data) => {\n\t\t\tconfirmed.push(data.confirmed);\n\t\t\tdeaths.push(data.deaths);\n\t\t\trecovered.push(data.recovered);\n\t\t\tactive.push(data.confirmed - data.recovered - data.deaths);\n\t\t\tdates.push(data.date);\n\t\t});\n\t\treturn (\n\t\t\t<Row className=\"today-row \" style={{ justifyContent: \"space-evenly\" }}>\n\t\t\t\t<CaseData\n\t\t\t\t\tclass=\"confirmed\"\n\t\t\t\t\tdata={confirmed}\n\t\t\t\t\tdates={dates}\n\t\t\t\t\ttitle=\"Confirmed\"\n\t\t\t\t/>\n\n\t\t\t\t<CaseData\n\t\t\t\t\tclass=\"recovered\"\n\t\t\t\t\tdata={recovered}\n\t\t\t\t\tdates={dates}\n\t\t\t\t\ttitle=\"Recovered\"\n\t\t\t\t/>\n\n\t\t\t\t<CaseData class=\"deaths\" data={deaths} dates={dates} title=\"Deaths\" />\n\n\t\t\t\t<CaseData class=\"active\" data={active} dates={dates} title=\"Active\" />\n\t\t\t</Row>\n\t\t);\n\t} else {\n\t\treturn <></>;\n\t}\n}\n\nexport default Today;\n","import React from \"react\";\nimport Charts from \"./Charts\";\nimport Today from \"./Today\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nfunction CountryData(props) {\n\t// world data having arrays for dates, confirmed, recovered,active and deaths\n\tconst chartData = props.stats;\n\tconst selectedCountry = props.selectedCountry;\n\treturn (\n\t\t<Container fluid>\n\t\t\t<Row>\n\t\t\t\t<Col md={12} style={{ fontSize: 40, fontWeight: \"bold\", padding: 20 }}>\n\t\t\t\t\t{selectedCountry}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Today data={chartData} />\n\t\t\t<div style={{ display: !selectedCountry && \"none\" }}>\n\t\t\t\t<Charts chartData={chartData} selectedCountry={selectedCountry} />\n\t\t\t</div>\n\t\t</Container>\n\t);\n}\n\nexport default CountryData;\n","import React from \"react\";\nimport { Col, Form } from \"react-bootstrap\";\n\nfunction SelectBox(props) {\n\treturn (\n\t\t<Col md={{ span: 4, offset: 5 }}>\n\t\t\t<Form>\n\t\t\t\t<Form.Group className=\"country-select\">\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\tcustom\n\t\t\t\t\t\tonChange={props.onChangeFunction}\n\t\t\t\t\t\tvalue={props.selectedValue}\n\t\t\t\t\t\tdefaultValue=\"select\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"select\"> Search Country </option>\n\t\t\t\t\t\t{props.countryArr.map((country) => (\n\t\t\t\t\t\t\t<option value={country} key={country}>\n\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t{country}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t</Form>\n\t\t</Col>\n\t);\n}\n\nexport default SelectBox;\n","import React from \"react\";\nimport CountryData from \"./CountryData\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport SelectBox from \"./SelectBox\";\n\nexport default class CovidData extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcountryArr: [],\n\t\t\tdata: {},\n\t\t\tworldStats: {},\n\t\t\tselectedCounty: \"\",\n\t\t};\n\t\tthis.getData = this.getData.bind(this);\n\t\tthis.backToGlobalNumbers = this.backToGlobalNumbers.bind(this);\n\t\tfetch(\"https://pomber.github.io/covid19/timeseries.json\")\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tvar worldStats = { confirmed: 0, recovered: 0, deaths: 0 };\n\t\t\t\tvar countryArr = Object.keys(data).map((i) => i);\n\t\t\t\tcountryArr.forEach((country) => {\n\t\t\t\t\tlet countryData = data[country];\n\t\t\t\t\t// pick last object for today data\n\t\t\t\t\tcountryData = countryData[countryData.length - 1];\n\t\t\t\t\tworldStats.confirmed += countryData.confirmed;\n\t\t\t\t\tworldStats.recovered += countryData.recovered;\n\t\t\t\t\tworldStats.deaths += countryData.deaths;\n\t\t\t\t});\n\t\t\t\t// world data\n\t\t\t\tvar worldChart = [];\n\t\t\t\tcountryArr.forEach((country) => {\n\t\t\t\t\tlet countryData = data[country];\n\t\t\t\t\tcountryData.forEach((dailyData, index) => {\n\t\t\t\t\t\tif (worldChart[index] === undefined) {\n\t\t\t\t\t\t\tvar worldStats = {\n\t\t\t\t\t\t\t\tdate: dailyData.date,\n\t\t\t\t\t\t\t\tconfirmed: dailyData.confirmed,\n\t\t\t\t\t\t\t\trecovered: dailyData.recovered,\n\t\t\t\t\t\t\t\tdeaths: dailyData.deaths,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tworldChart.push(worldStats);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tworldChart[index].confirmed += dailyData.confirmed;\n\t\t\t\t\t\t\tworldChart[index].recovered += dailyData.recovered;\n\t\t\t\t\t\t\tworldChart[index].deaths += dailyData.deaths;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tthis.setState({\n\t\t\t\t\tcountryArr: countryArr,\n\t\t\t\t\tdata: data,\n\t\t\t\t\tworldStats: worldStats,\n\t\t\t\t\tworldChart: worldChart,\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetData(event) {\n\t\tvar country = event.target.value;\n\t\tif (country !== \"select\") {\n\t\t\tthis.setState({\n\t\t\t\tselectedCountry: country,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tselectedCountry: \"\",\n\t\t\t});\n\t\t}\n\t}\n\n\tbackToGlobalNumbers() {\n\t\tthis.setState({\n\t\t\tselectedCountry: \"\",\n\t\t});\n\t}\n\trender() {\n\t\tconst countryStats = this.state.data[this.state.selectedCountry];\n\t\tconst worldChart = this.state.worldChart;\n\t\tconst lastUpdated =\n\t\t\tworldChart !== undefined ? worldChart[worldChart.length - 1].date : \"\";\n\t\treturn (\n\t\t\t<Container\n\t\t\t\tfluid\n\t\t\t\tstyle={{ backgroundColor: \"#fdfffc\", padding: 0 }}\n\t\t\t\tclassName=\"App\"\n\t\t\t>\n\t\t\t\t{/*Header starts here */}\n\t\t\t\t<Row className=\"App-header\">\n\t\t\t\t\t<Col md={3} style={{ textAlign: \"left\" }}>\n\t\t\t\t\t\tCOVID19 DASHBOARD\n\t\t\t\t\t</Col>\n\t\t\t\t\t{/*Select Box for country search ends here */}\n\t\t\t\t\t<SelectBox\n\t\t\t\t\t\tonChangeFunction={this.getData}\n\t\t\t\t\t\tcountryArr={this.state.countryArr}\n\t\t\t\t\t\tselectedValue={this.state.selectedCountry}\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t\t{/*Header ends here */}\n\t\t\t\t<Row>\n\t\t\t\t\t{/*Get back to global numbers */}\n\t\t\t\t\t<Col md={{ span: 1 }} xs={1}>\n\t\t\t\t\t\t{this.state.selectedCountry ? (\n\t\t\t\t\t\t\t<Button className=\"back\" onClick={this.backToGlobalNumbers}>\n\t\t\t\t\t\t\t\tBACK\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{/*Last updated */}\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col\n\t\t\t\t\t\tmd={{ span: 2, offset: 9 }}\n\t\t\t\t\t\txs={{ span: 6, offset: 5 }}\n\t\t\t\t\t\tstyle={{ fontSize: 16, marginTop: \"1rem\" }}\n\t\t\t\t\t>\n\t\t\t\t\t\tLast Updated: {lastUpdated}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Container fluid>\n\t\t\t\t\t{this.state.selectedCountry ? (\n\t\t\t\t\t\t<CountryData\n\t\t\t\t\t\t\tstats={countryStats}\n\t\t\t\t\t\t\tselectedCountry={this.state.selectedCountry}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<CountryData stats={worldChart} selectedCountry=\"WORLD\" />\n\t\t\t\t\t)}\n\t\t\t\t</Container>\n\t\t\t\t<footer>\n\t\t\t\t\t<Row className=\"App-footer\">\n\t\t\t\t\t\t<Col md={1}>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"https://github.com/pomber/covid19\"\n\t\t\t\t\t\t\t\tstyle={{ color: \"white\", textDecoration: \"underline\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tDatasource\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={{ span: 2, offset: 9 }}>\n\t\t\t\t\t\t\tCreated by{\" \"}\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"https://github.com/singhdivjeet/COVID19-DASHBOARD\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\tstyle={{ color: \"white\", textDecoration: \"underline\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tDivjeet Singh\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</footer>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport CovidData from \"./components/CovidData.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n\treturn <CovidData />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}